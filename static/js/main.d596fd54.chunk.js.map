{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Footer","Sider","Content","BASE_NAME","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","spawnEnemies","e","console","log","target","value","checked","send","App","useState","userName","setUserName","useEffect","on","name","score","style","height","width","Item","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAOQA,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,OAAQC,EAAmBF,IAAnBE,MAAOC,EAAYH,IAAZG,QAIzBC,EAAY,yBAEZC,EAAe,IAAIC,eAAa,CACpCC,UAAU,GAAD,OAAKH,EAAL,aACTI,QAAQ,GAAD,OAAKJ,EAAL,QACPK,aAAa,GAAD,OAAKL,EAAL,gBACZM,QAAQ,GAAD,OAAKN,EAAL,UAGT,SAASO,EAAaC,GACpBC,QAAQC,IAAIF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,QAAU,aAAe,aAC9DZ,EAAaa,KAAKN,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,QAAU,aAAe,aA4CvDE,MAzCf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,qBAAU,WACRlB,EAAamB,GAAG,eAAe,SAAUC,EAAMC,GAC7CJ,EAAYG,QAEb,IAGD,8BACE,eAAC,IAAD,WACE,cAAC1B,EAAD,uBACA,eAAC,IAAD,WACE,cAACI,EAAD,UACE,cAAC,IAAD,CAAOwB,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAAOxB,aAAcA,MAE3D,eAACH,EAAD,WACG,2EAAcmB,KACf,eAAC,IAAD,WACE,cAAC,IAAKS,KAAN,UAAW,cAAC,IAAD,CAAUd,MAAM,QAAQe,SAAUpB,MAC7C,cAAC,IAAKmB,KAAN,UAAW,cAAC,IAAD,CAAUd,MAAM,QAAQe,SAAUpB,MAC7C,cAAC,IAAKmB,KAAN,UAAW,cAAC,IAAD,CAAUd,MAAM,QAAQe,SAAUpB,MAC7C,cAAC,IAAKmB,KAAN,UAAW,cAAC,IAAD,CAAUd,MAAM,QAAQe,SAAUpB,MAC7C,cAAC,IAAKmB,KAAN,UAAW,cAAC,IAAD,CAAUd,MAAM,QAAQe,SAAUpB,SAE/C,cAAC,IAAD,IACA,cAAC,IAAD,CAAQqB,QAAS,WACf3B,EAAaa,KAAK,YAAa,WADjC,0BAGA,cAAC,IAAD,CAAQc,QAAS,WACf3B,EAAaa,KAAK,YAAa,UADjC,gCAKJ,cAACjB,EAAD,sCChDOgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d596fd54.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { Button, Checkbox, Divider, Layout, List } from 'antd';\n\nimport 'antd/dist/antd.css';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\nconst BASE_NAME = 'unity3d/Build/unity3d.';\n\nconst unityContext = new UnityContext({\n  loaderUrl: `${BASE_NAME}loader.js`,\n  dataUrl: `${BASE_NAME}data`,\n  frameworkUrl: `${BASE_NAME}framework.js`,\n  codeUrl: `${BASE_NAME}wasm`,\n});\n\nfunction spawnEnemies(e) {\n  console.log(e.target.value, e.target.checked ? \"StartShake\" : \"StopShake\");\n  unityContext.send(e.target.value, e.target.checked ? \"StartShake\" : \"StopShake\");\n}\n\nfunction App() {\n  const [userName, setUserName] = useState(\"\");\n\n  useEffect(function () {\n    unityContext.on(\"ClickObject\", function (name, score) {\n      setUserName(name);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Layout>\n        <Header>IOT demo</Header>\n        <Layout>\n          <Content>\n            <Unity style={{ height: 600, width: 600 }} unityContext={unityContext} />\n          </Content>\n          <Sider>\n            {<p>{`你选择了管道 ${userName}`}</p>}\n            <List>\n              <List.Item><Checkbox value=\"pipe1\" onChange={spawnEnemies}></Checkbox></List.Item>\n              <List.Item><Checkbox value=\"pipe2\" onChange={spawnEnemies}></Checkbox></List.Item>\n              <List.Item><Checkbox value=\"pipe3\" onChange={spawnEnemies}></Checkbox></List.Item>\n              <List.Item><Checkbox value=\"pipe4\" onChange={spawnEnemies}></Checkbox></List.Item>\n              <List.Item><Checkbox value=\"pipe5\" onChange={spawnEnemies}></Checkbox></List.Item>\n            </List>\n            <Divider></Divider>\n            <Button onClick={() => {\n              unityContext.send('colorCube', 'BlueMe');\n            }}>绿色</Button>\n            <Button onClick={() => {\n              unityContext.send('colorCube', 'RedMe');\n            }}>乳白</Button>\n          </Sider>\n        </Layout>\n        <Footer>Powered by mendix</Footer>\n      </Layout>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}